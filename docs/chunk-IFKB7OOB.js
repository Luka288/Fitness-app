import{b as o,e as O,g as k,h as m,i as I,j as A,l as c,o as G}from"./chunk-IB7F6B6N.js";import{Kc as $,R as S,X as D,a as p,b as h,e as b,o as d,s as n,t as C}from"./chunk-WI2OL4WN.js";var P=class v{auth=D($);fire=D(A);alerts=D(G);saveData(t){return b(this,null,function*(){try{let e=this.auth.currentUser;if(!e)return;let r=new Date().toISOString().split("T")[0],a=o(this.fire,`users/${e.uid}`);yield m(a,{activities:I(h(p({},t),{date:r,savedAt:new Date().toISOString()}))}),this.updatePublicData(),this.alerts.toast("Data saved!","success","")}catch{this.alerts.toast("Something went wrong try again","error","red")}})}updatePublicData(){return b(this,null,function*(){let t=this.auth.currentUser;if(t)try{let e=o(this.fire,`users/${t.uid}`),r=o(this.fire,`publicData/${t.uid}`),a=yield O(e);if(!a.exists())return;let u=a.data().activities||[],i=u.length,f=u.reduce((g,y)=>g+(y.burnedCalories||0),0);yield m(r,{activities:i,burnedCalories:f})}catch(e){console.error("Error syncing public data:",e)}})}userActivity(){let t=this.auth.currentUser;if(!t)return d([]);let e=o(this.fire,`users/${t.uid}`);return this.updatePublicData(),c(e).pipe(n(r=>((r??{}).activities||[]).map(a=>h(p({},a),{burnedCalories:Math.floor(a.burnedCalories)}))))}addGoal(t){let e=this.auth.currentUser;if(!e)return;let r=new Date().toISOString().split("T")[0],a=o(this.fire,`users/${e.uid}/dailyGoals/${r}`);try{k(a,{goal:t.goal,type:t.type,addDate:t.addDate},{merge:!0}),this.alerts.toast("Goal saved!","success","green")}catch{}}goalCalculate(){let t=this.auth.currentUser;if(!t)return d(null);let e=new Date().toISOString().split("T")[0],r=o(this.fire,`users/${t.uid}/dailyGoals/${e}`),a=o(this.fire,`users/${t.uid}`),s=c(r).pipe(n(i=>i)),u=c(a).pipe(n(i=>i));return C([s,u]).pipe(n(([i,f])=>{if(!i||!f)return null;let y=(f.activities||[]).filter(l=>l.date===e).reduce((l,w)=>i.type==="CALORIES"?l+(w.burnedCalories||0):i.type==="DISTANCE"?l+(w.distance||0):l,0);return h(p({},i),{progress:Math.round(y)||0})}))}getChartedWorkouts(){let t=this.auth.currentUser;if(!t)return d([]);let e=o(this.fire,`users/${t.uid}`);return c(e).pipe(n(r=>r?(r.activities||[]).slice(-7).map(s=>({burnedCalories:Math.round(s.burnedCalories),activity:s.activityName,date:s.date})):[]))}prWorkout(){let t=this.auth.currentUser;if(!t)return d();let e=o(this.fire,`users/${t.uid}`);return c(e).pipe(n(r=>{if(!r)return null;let a=r,s=a.activities?a.activities:[];return s.length===0?null:s.reduce((u,i)=>i.burnedCalories>u.burnedCalories?i:u)}))}static \u0275fac=function(e){return new(e||v)};static \u0275prov=S({token:v,factory:v.\u0275fac,providedIn:"root"})};export{P as a};
